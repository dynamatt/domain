/* 
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * OpenAPI spec version: v2
 * Contact: api@domain.com.au
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Domain.Client;
using Domain.Api;
using Domain.Model;

namespace Domain.Test
{
    /// <summary>
    ///  Class for testing SchoolsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SchoolsApiTests
    {
        private SchoolsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SchoolsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SchoolsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SchoolsApi
            //Assert.IsInstanceOfType(typeof(SchoolsApi), instance, "instance is a SchoolsApi");
        }

        /// <summary>
        /// Test SchoolsGetById
        /// </summary>
        [Test]
        public void SchoolsGetByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.SchoolsGetById(id);
            //Assert.IsInstanceOf<School> (response, "response is School");
        }
        /// <summary>
        /// Test SchoolsSearchByLocation
        /// </summary>
        [Test]
        public void SchoolsSearchByLocationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //double? latitude = null;
            //double? longitude = null;
            //var response = instance.SchoolsSearchByLocation(latitude, longitude);
            //Assert.IsInstanceOf<List<SchoolWithDistance>> (response, "response is List<SchoolWithDistance>");
        }
    }

}
