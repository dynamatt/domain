/* 
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * OpenAPI spec version: v2
 * Contact: api@domain.com.au
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Domain.Client;
using Domain.Api;
using Domain.Model;

namespace Domain.Test
{
    /// <summary>
    ///  Class for testing SuburbPerformanceStatisticsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SuburbPerformanceStatisticsApiTests
    {
        private SuburbPerformanceStatisticsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SuburbPerformanceStatisticsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SuburbPerformanceStatisticsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SuburbPerformanceStatisticsApi
            //Assert.IsInstanceOfType(typeof(SuburbPerformanceStatisticsApi), instance, "instance is a SuburbPerformanceStatisticsApi");
        }

        /// <summary>
        /// Test SuburbPerformanceGetByNamedSuburb
        /// </summary>
        [Test]
        public void SuburbPerformanceGetByNamedSuburbTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string state = null;
            //string suburb = null;
            //string postcode = null;
            //SuburbPerformancePropertyCategory propertyCategory = null;
            //int? bedrooms = null;
            //SuburbPerformancePeriodSize periodSize = null;
            //int? startingPeriodRelativeToCurrent = null;
            //int? totalPeriods = null;
            //var response = instance.SuburbPerformanceGetByNamedSuburb(state, suburb, postcode, propertyCategory, bedrooms, periodSize, startingPeriodRelativeToCurrent, totalPeriods);
            //Assert.IsInstanceOf<APMAPIModelsSuburbV2SuburbPerformanceModel> (response, "response is APMAPIModelsSuburbV2SuburbPerformanceModel");
        }
    }

}
